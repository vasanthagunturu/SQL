Types of Data:
char- character data type fixed length/values 1-8000
varchar-character data type,length varies
varchar(max)- when size of colmn data varies and may exceed 8000
nchar-character data type /fixed length stringdata/values 1-4000/column size consistent
nvarchar-character/variable length string data/2 GB max storage size/column size varies
nvarchar(max)-use when data entries vary & stringlength may exceed 4000 byte pairs
binary- fixed length binary-data/length of n bytes/n=1-8000
varbinary-variable length binary data/1-8000
can convert string datatype to binary/varbinary data type -char,varchar,nchar,nvarchar,text,ntext,image
ntext,text,image- to store large Unicode/nonUnicode/binary data, will be removed in future versions of SQL Server-
The following constraints are commonly used in SQL:

Constraints:
NOT NULL - Ensures that a column cannot have a NULL value
UNIQUE - Ensures that all values in a column are different
PRIMARY KEY - A combination of a NOT NULL and UNIQUE. Uniquely identifies each row in a table
FOREIGN KEY - Uniquely identifies a row/record in another table
CHECK - Ensures that all values in a column satisfies a specific condition
DEFAULT - Sets a default value for a column when no value is specified
INDEX - Used to create and retrieve data from the database very quickly

DIFFERENT SUBSETS OF SQL:
DDL- Data Defenition Language- commands to define schema
DML - Data Manipulation Language- commands to manipulate
DCL- Data Control language - Authorize/invoke/permissions/rights
TCL- Transaction Control Language-rollback

Database:
CREATE PROCEDURE SelectAllCustomers @City nvarchar(30)
AS
SELECT * FROM Customers WHERE City = @City
GO;      
EXEC SelectAllCustomers City = "London";                           (Stored Procedure/ London is the parameter)
EXEC SelectAllCustomers City = "London", PostalCode = "WA1 1DP";

CREATE DATABASE testDB;  (to create new Database -Make sure you have admin privilege before creating any database.)
SHOW DATABASES;          (Once a database is created, you can check it in the list of databases with this command)
DROP DATABASE testDB;    (to drop a Db)
BACKUP DATABASE testDB TO DISK = 'D:\backups\testDB.bak';   (to back up and save a DB, give file path where it has to be stored, store in a diff. drive than 
original DB)
BACKUP DATABASE testDB TO DISK = 'D:\backups\testDB.bak' with DIFFERENTIAL  (only backs up the parts of the database that have changed since the last full 
database backup, saves time)
CREATE TABLE Persons (
    PersonID int,
    LastName varchar(255),
    FirstName varchar(255),
    Address varchar(255),
    City varchar(255) );         (to create a new table in the DB, with these columns and data types) 
	
CREATE TABLE TestTable AS
SELECT customername, contactname
FROM customers;                  (to create a new table with certain columns from existing table- will take all the values of those columns)

DROP TABLE Shippers;    (to drop or delete a table from DB - Deleting a table will result in loss of complete information stored in the table)
TRUNCATE TABLE table_name;  (completely delete table and all its data)
ALTER TABLE Customers ADD Email varchar(255);  (Alter table - we add or delete columns in a table)
ALTER TABLE Customers DROP COLUMN Email;(alter table- drop column)
ALTER TABLE Persons ADD DateOfBirth date; 
ALTER TABLE Persons ALTER COLUMN DateOfBirth year; 

CREATE TABLE Persons (
    ID int NOT NULL,
    LastName varchar(255) NOT NULL,                (Check constraint, constraints are given when creating and altering the table)
    FirstName varchar(255),
    Age int,
    CHECK (Age>=18) )
CREATE TABLE Orders (
    ID int NOT NULL,
    OrderNumber int NOT NULL,
    OrderDate date DEFAULT GETDATE()               (default constraint)
ALTER TABLE Persons
ALTER City SET DEFAULT 'Houston';

CREATE INDEX idx_pname
ON Persons (LastName, FirstName);              (to create index on 2 columns in a table)
ALTER TABLE Persons
DROP INDEX idx_pname;                          (to drop an index)

CREATE TABLE Persons (
    Personid int NOT NULL AUTO_INCREMENT,
    LastName varchar(255) NOT NULL,
    FirstName varchar(255),
    Age int,
    PRIMARY KEY (Personid) )                 (Auto increment)

Personid int IDENTITY(1,1) PRIMARY KEY,

CREATE VIEW [Brazil Customers] AS
SELECT CustomerName, ContactName
FROM Customers
WHERE Country = "Brazil";                    (creating View)

SELECT * FROM [Brazil Customers];     (we can see the view created in this table)
